{"version":3,"sources":["logo.svg","api/profilesApi.js","context/createDataContext.js","context/ProfilesContext.js","consts/Actions.js","reducers/profileReducer.js","componenets/StyledComponents.js","componenets/TopPanel.js","componenets/Profile.js","componenets/helpers/Dialog.js","componenets/EditProfile.js","componenets/ProfileDialog.js","componenets/Profiles.js","screens/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","reducer","actions","defaultValues","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","Object","keys","reduce","acc","key","value","createDataContext","type","payload","profilesToAdd","profiles","profileToRemove","profile","filter","_id","profileToUpdate","Array","from","splice","findIndex","currentProfile","find","fetchProfiles","id","a","profilesApi","get","data","error","console","log","addProfile","name","bio","fb_id","post","removeProfile","delete","updateProfile","details","put","getProfile","setCurrentProfile","profileId","currentUser","initalState","Button","styled","div","color","TopPanel","useContext","ProfilesContext","profileReducer","profilesInitalState","onChange","e","target","placeholder","onClick","ProfileTile","className","DialogWrapper","hide","ProfileEditor","src","style","flex","Dialog","closest","EditProfile","ProfilesContainer","useEffect","ProfileDialog","map","Profile","Profiles","App","MainScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.faf129dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\n\nconst baseURL = \"https://milenium-server.herokuapp.com\";\n\nconst instance = axios.create({\n  baseURL\n});\n\nexport default instance;\n","import React, { useReducer } from \"react\";\n\nexport default (reducer, actions, defaultValues) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, defaultValues);\n\n    const boundActions = Object.keys(actions).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: actions[key](dispatch)\n      }),\n      {}\n    );\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","import createDataContext from \"./createDataContext\";\nimport profilesApi from \"../api/profilesApi\";\nimport {\n  ADD_PROFILES,\n  REMOVE_PROFILE,\n  UPDATE_PROFILE,\n  SET_CURRENT_PROFILE,\n  GET_PROFILE\n} from \"../consts/Actions\";\nconst profilesReducer = (state, { type, payload }) => {\n  switch (type) {\n    case ADD_PROFILES:\n      const { profiles: profilesToAdd } = payload;\n      return { ...state, profiles: [...state.profiles, ...profilesToAdd] };\n      break;\n    case REMOVE_PROFILE:\n      const { profile: profileToRemove } = payload;\n      return {\n        ...state,\n        profiles: state.filter(profile => profile._id !== profileToRemove._id)\n      };\n    case UPDATE_PROFILE:\n      const { profile: profileToUpdate } = payload;\n      const profiles = Array.from(state.profiles);\n      profiles.splice(\n        profiles.findIndex(({ _id }) => profileToUpdate._id === _id),\n        1,\n        profileToUpdate\n      );\n      return { ...state, profiles };\n    case SET_CURRENT_PROFILE:\n      return {\n        ...state,\n        currentProfile: state.profiles.find(({ _id }) => _id === payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getProfile = dispatch => async id => {\n  const {\n    data: { data },\n    error\n  } = await profilesApi.get(`/profiles${id ? `/${id}` : \"\"}`);\n  if (error) {\n    return console.log(error);\n  }\n  return data;\n};\n\nconst getProfileImage = dispatch => async fb_id => {};\n\nconst fetchProfiles = dispatch => async id => {\n  const {\n    data: { data },\n    error\n  } = await profilesApi.get(`/profiles`);\n  if (error) {\n    return console.log(error);\n  }\n\n  dispatch({ type: ADD_PROFILES, payload: { profiles: data } });\n};\nconst addProfile = dispatch => async ({ name, bio, fb_id }) => {\n  const {\n    data: { data },\n    error\n  } = await profilesApi.post(\"/profiles\", {\n    name,\n    bio,\n    fb_id\n  });\n  if (error) {\n    return console.log(error);\n  }\n  dispatch({ type: ADD_PROFILES, payload: { profiles: [data] } });\n};\n\nconst setCurrentProfile = dispatch => profileId => {\n  dispatch({ type: SET_CURRENT_PROFILE, payload: profileId });\n};\n\nconst removeProfile = dispatch => async id => {\n  const {\n    data: {\n      data: { _id }\n    },\n    error\n  } = await profilesApi.delete(`/profiles/${id}`);\n  if (error) {\n    return console.log(error);\n  }\n  dispatch({ type: REMOVE_PROFILE, payload: { profile: _id } });\n};\n\nconst updateProfile = dispatch => async details => {\n  const {\n    data: { data },\n    error\n  } = await profilesApi.put(\"/profiles\", details, {\n    \"Content-Type\": \"application/json\"\n  });\n  if (error) {\n    return console.log(error);\n  }\n  dispatch({ type: UPDATE_PROFILE, payload: { profile: data } });\n};\n\nexport const { Provider, Context } = createDataContext(\n  profilesReducer,\n  {\n    fetchProfiles,\n    addProfile,\n    removeProfile,\n    updateProfile,\n    getProfile,\n    setCurrentProfile\n  },\n  { profiles: [], currentUser: null }\n);\n","export const ADD_PROFILES = \"ADD_PROFILE\";\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const SET_CURRENT_PROFILE = \"SET_CURRENT_PROFILE\";\n","export const initalState = { name: \"\", fb_id: \"\", bio: \"\" };\n\nexport default (state, { type, payload }) => {\n  switch (type) {\n    case \"set_name\":\n      return { ...state, name: payload };\n    case \"set_fb_id\":\n      return { ...state, fb_id: payload };\n    case \"set_bio\":\n      return { ...state, bio: payload };\n    case \"reset\":\n      return initalState;\n    default:\n      return state;\n  }\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.div`\n  height: 30px;\n  background-color: ${({ color }) => color || \"#2f78b9\"};\n  border: solid thin;\n  color: white;\n  margin: 5px 2px;\n\n  margin-right: 25px;\n  padding: 5px 20px;\n  display: inline-flex;\n  align-items: center;\n  border: none;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 7px;\n  z-index: 2;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React, { useContext, useReducer, useCallback } from \"react\";\nimport { Context as ProfilesContext } from \"../context/ProfilesContext\";\nimport profileReducer, {\n  initalState as profilesInitalState\n} from \"../reducers/profileReducer\";\nimport styled from \"styled-components\";\nimport { Button } from \"./StyledComponents\";\n\nconst TopPanel = styled.div`\n  background-color: black;\n  display: flex;\n  height: 50px;\n  flex-direction: row;\n  align-items: center;\n\n  input {\n    margin: 5px 2px;\n    line-height: 20px;\n    font-size: 20px;\n    height: 30px;\n    border-radius: 5px;\n    border-width: 2px;\n  }\n`;\n\n//`http://graph.facebook.com/${fb_id}/picture?type=square`\nexport default () => {\n  const { addProfile } = useContext(ProfilesContext);\n  const [{ name, bio, fb_id }, dispatch] = useReducer(\n    profileReducer,\n    profilesInitalState\n  );\n\n  return (\n    <TopPanel>\n      <input\n        onChange={e => {\n          dispatch({ type: \"set_name\", payload: e.target.value });\n        }}\n        value={name}\n        name=\"name\"\n        placeholder=\"Name\"\n        type=\"text\"\n      />\n      <input\n        onChange={e => {\n          dispatch({ type: \"set_bio\", payload: e.target.value });\n        }}\n        value={bio}\n        name=\"bio\"\n        placeholder=\"Bio\"\n        type=\"text\"\n      />\n      <input\n        onChange={e => {\n          dispatch({ type: \"set_fb_id\", payload: e.target.value });\n        }}\n        value={fb_id}\n        name=\"fb_id\"\n        placeholder=\"FaceBook Id\"\n        type=\"text\"\n      />\n      <Button\n        color={\"#58b957\"}\n        onClick={() => {\n          addProfile({ name, bio, fb_id });\n          dispatch({ type: \"reset\" });\n        }}\n      >\n        Create\n      </Button>\n    </TopPanel>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Context as ProfilesContext } from \"../context/ProfilesContext\";\nimport { Button } from \"./StyledComponents\";\n\nconst ProfileTile = styled.div`\n  border-radius: 5px;\n  width: 30%;\n  display: flex;\n  flex-direction: row;\n  background-color: rgba(220, 220, 220, 0.5);\n  font-size: 20px;\n  height: 60px;\n  margin: 5px;\n  align-items: center;\n  .profile-name-tile {\n    flex: 1;\n    margin-left: 24px;\n  }\n`;\n\nexport default ({ _id, name }) => {\n  const { setCurrentProfile } = useContext(ProfilesContext);\n  return (\n    <ProfileTile>\n      <div className=\"profile-name-tile\">{name}</div>\n      <Button\n        onClick={() => {\n          setCurrentProfile(_id);\n        }}\n      >\n        Edit\n      </Button>\n    </ProfileTile>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst DialogWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  justify-content: center;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n`;\n\nexport default ({ children, hide }) => {\n  return <DialogWrapper onClick={hide}>{children}</DialogWrapper>;\n};\n","import React, { useContext, useReducer, useState } from \"react\";\nimport { Context as ProfilesContext } from \"../context/ProfilesContext\";\nimport styled from \"styled-components\";\nimport profileReducer from \"../reducers/profileReducer\";\nimport { Button } from \"./StyledComponents\";\nconst ProfileEditor = styled.div`\n  z-index: 2;\n  background-color: white;\n  width: 50%;\n  height: 50%;\n\n  border-radius: 5px;\n  box-shadow: 4px 4px 10px;\n  display: flex;\n  flex-direction: column;\n  .row {\n    padding: 10px;\n    display: flex;\n    flex-direction: row;\n\n    input {\n      border-radius: 5px;\n      width: 100%;\n      padding: 5px;\n      font-size: 16px;\n      border-width: 1px;\n    }\n    &:first-child {\n      border-bottom: 1px solid lightgrey;\n    }\n  }\n  .profile-name {\n    flex: 1;\n    flex-direction: row;\n    display: flex;\n    align-items: center;\n    padding-left: 30px;\n    font-size: 18px;\n    font-weight: 500;\n  }\n  .image-container {\n    border-radius: 50px;\n    overflow: hidden;\n    img {\n      width: 80px;\n      border-radios: 40px;\n    }\n  }\n`;\n//`http://graph.facebook.com/${fb_id}/picture?type=square`\nexport default () => {\n  const {\n    state: { currentProfile },\n    updateProfile,\n    setCurrentProfile\n  } = useContext(ProfilesContext);\n  const { _id } = currentProfile;\n  const [{ name, bio, fb_id }, dispatch] = useReducer(\n    profileReducer,\n    currentProfile\n  );\n  return (\n    <ProfileEditor className=\"dialog-content\">\n      <div className=\"row\">\n        <div className=\"image-container\">\n          <img\n            src={`http://graph.facebook.com/${currentProfile.fb_id}/picture?type=square`}\n          />\n        </div>\n        <div className=\"profile-name\">Edit {currentProfile.name}</div>\n      </div>\n      <div style={{ flex: 1 }}>\n        <div className=\"row\">\n          <input\n            onChange={e => {\n              dispatch({ type: \"set_name\", payload: e.target.value });\n            }}\n            value={name}\n            name=\"name\"\n            placeholder=\"Name\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"row\">\n          <input\n            onChange={e => {\n              dispatch({ type: \"set_bio\", payload: e.target.value });\n            }}\n            value={bio}\n            name=\"bio\"\n            placeholder=\"Bio\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"row\">\n          <input\n            onChange={e => {\n              dispatch({ type: \"set_fb_id\", payload: e.target.value });\n            }}\n            value={fb_id}\n            name=\"fb_id\"\n            placeholder=\"FaceBook Id\"\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div style={{ flex: 1 }} />\n        <Button\n          onClick={() => {\n            setCurrentProfile(null);\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          onClick={() => {\n            updateProfile({ _id, name, bio, fb_id });\n            setCurrentProfile(null);\n          }}\n        >\n          Save Changes\n        </Button>\n      </div>\n    </ProfileEditor>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Context as ProfilesContext } from \"../context/ProfilesContext\";\nimport Dialog from \"./helpers/Dialog\";\nimport EditProfile from \"./EditProfile\";\n\nexport default () => {\n  const {\n    state: { currentProfile },\n    setCurrentProfile\n  } = useContext(ProfilesContext);\n\n  return currentProfile ? (\n    <Dialog\n      hide={e => {\n        const content = e.target.closest(\".dialog-content\");\n\n        !content && setCurrentProfile(null);\n      }}\n    >\n      <EditProfile />\n    </Dialog>\n  ) : null;\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { Context as ProfilesContext } from \"../context/ProfilesContext\";\nimport styled from \"styled-components\";\nimport Profile from \"./Profile\";\nimport { useState } from \"react\";\nimport ProfileDialog from \"./ProfileDialog\";\n\nconst ProfilesContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport default () => {\n  const {\n    state: { profiles },\n    fetchProfiles\n  } = useContext(ProfilesContext);\n\n  useEffect(() => {\n    fetchProfiles();\n    // return () => {\n    //   cleanup\n    // }\n  }, []);\n\n  return (\n    <ProfilesContainer>\n      <ProfileDialog />\n      {profiles.map(profile => (\n        <Profile {...profile} />\n      ))}\n    </ProfilesContainer>\n  );\n};\n","import React from \"react\";\n\nimport TopPanel from \"../componenets/TopPanel\";\nimport Profiles from \"../componenets/Profiles\";\nexport default () => {\n  return (\n    <div className=\"app\">\n      <TopPanel />\n      <Profiles />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Provider as ProfilesProvider } from \"./context/ProfilesContext\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MainScreen from \"./screens/MainScreen\";\n\nfunction App() {\n  return (\n    <ProfilesProvider>\n      <MainScreen />\n    </ProfilesProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}